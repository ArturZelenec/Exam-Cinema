// <auto-generated />
using System;
using Exam_Cinema.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exam_Cinema.Migrations
{
    [DbContext(typeof(FilmContext))]
    [Migration("20230112183626_dbContext")]
    partial class dbContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.12");

            modelBuilder.Entity("Exam_Cinema.Model.Film", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("TEXT");

                    b.Property<int>("AvailableFilmsInLibrary")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EFormatType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PublishYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("ISBN");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            ISBN = "0553211765",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7095),
                            Director = "Frank Darabonts",
                            EFormatType = "FullHD",
                            PublishYear = 1994,
                            Title = "The Shawshank Redemption: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7145)
                        },
                        new
                        {
                            ISBN = "0786275391",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7150),
                            Director = "Francis Ford Coppola",
                            EFormatType = "UltraHD",
                            PublishYear = 1972,
                            Title = "The Godfather: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7152)
                        },
                        new
                        {
                            ISBN = "1856134032",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7155),
                            Director = "Christopher Nolan",
                            EFormatType = "HD",
                            PublishYear = 2008,
                            Title = "The Dark Knight: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7158)
                        },
                        new
                        {
                            ISBN = "0451528905",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7161),
                            Director = "Sidney Lumet",
                            EFormatType = "HD",
                            PublishYear = 1957,
                            Title = "12 Angry Men: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7163)
                        },
                        new
                        {
                            ISBN = "0847980790",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7166),
                            Director = "Steven Spielberg",
                            EFormatType = "FullHD",
                            PublishYear = 1993,
                            Title = "Schindler's List: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7168)
                        },
                        new
                        {
                            ISBN = "0020198817",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7171),
                            Director = "Quentin Tarantino",
                            EFormatType = "UltraHD",
                            PublishYear = 1994,
                            Title = "Pulp Fiction: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7173)
                        },
                        new
                        {
                            ISBN = "0553213113",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7176),
                            Director = "Sergio Leone",
                            EFormatType = "HD",
                            PublishYear = 1966,
                            Title = "The Good, the Bad and the Ugly: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7178)
                        },
                        new
                        {
                            ISBN = "1400079985",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7181),
                            Director = "Robert Zemeckis",
                            EFormatType = "HD",
                            PublishYear = 1994,
                            Title = "Forrest Gump: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7183)
                        },
                        new
                        {
                            ISBN = "0451526929",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7186),
                            Director = "David Fincher",
                            EFormatType = "UltraHD",
                            PublishYear = 1999,
                            Title = "Fight Club: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7188)
                        },
                        new
                        {
                            ISBN = "0439136350",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7191),
                            Director = "Christopher Nolan",
                            EFormatType = "UltraHD",
                            PublishYear = 2010,
                            Title = "Inception: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7194)
                        },
                        new
                        {
                            ISBN = "1856136124",
                            AvailableFilmsInLibrary = 0,
                            Created = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7197),
                            Director = "Lilly Wachowski",
                            EFormatType = "FullHD",
                            PublishYear = 1999,
                            Title = "The Matrix: ",
                            Updated = new DateTime(2023, 1, 12, 20, 36, 26, 196, DateTimeKind.Local).AddTicks(7199)
                        });
                });

            modelBuilder.Entity("Exam_Cinema.Model.LibraryFilm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilmISBN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsTaken")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FilmISBN");

                    b.ToTable("LibraryFilms");
                });

            modelBuilder.Entity("Exam_Cinema.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TakenFilms")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Exam_Cinema.Model.UserFilm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FilmTaken")
                        .HasColumnType("TEXT");

                    b.Property<int>("LibraryFilmId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LibraryFilmId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFilms");
                });

            modelBuilder.Entity("Exam_Cinema.Model.LibraryFilm", b =>
                {
                    b.HasOne("Exam_Cinema.Model.Film", "Film")
                        .WithMany("LibraryFilms")
                        .HasForeignKey("FilmISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Exam_Cinema.Model.UserFilm", b =>
                {
                    b.HasOne("Exam_Cinema.Model.LibraryFilm", "LibraryFilm")
                        .WithMany("UserFilms")
                        .HasForeignKey("LibraryFilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam_Cinema.Model.User", "User")
                        .WithMany("UserFilms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LibraryFilm");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Exam_Cinema.Model.Film", b =>
                {
                    b.Navigation("LibraryFilms");
                });

            modelBuilder.Entity("Exam_Cinema.Model.LibraryFilm", b =>
                {
                    b.Navigation("UserFilms");
                });

            modelBuilder.Entity("Exam_Cinema.Model.User", b =>
                {
                    b.Navigation("UserFilms");
                });
#pragma warning restore 612, 618
        }
    }
}
